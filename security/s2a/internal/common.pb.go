// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package s2a_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The ciphersuites supported by S2A. The name determines the confidentiality,
// and authentication ciphers as well as the hash algorithm used for PRF in
// TLS 1.2 or HKDF in TLS 1.3. Thus, the components of the name are:
//  - AEAD -- for encryption and authentication, e.g., AES_128_GCM.
//  - Hash algorithm -- used in PRF or HKDF, e.g., SHA256.
type Ciphersuite int32

const (
	Ciphersuite_AES_128_GCM_SHA256       Ciphersuite = 0
	Ciphersuite_AES_256_GCM_SHA384       Ciphersuite = 1
	Ciphersuite_CHACHA20_POLY1305_SHA256 Ciphersuite = 2
)

var Ciphersuite_name = map[int32]string{
	0: "AES_128_GCM_SHA256",
	1: "AES_256_GCM_SHA384",
	2: "CHACHA20_POLY1305_SHA256",
}

var Ciphersuite_value = map[string]int32{
	"AES_128_GCM_SHA256":       0,
	"AES_256_GCM_SHA384":       1,
	"CHACHA20_POLY1305_SHA256": 2,
}

func (x Ciphersuite) String() string {
	return proto.EnumName(Ciphersuite_name, int32(x))
}

func (Ciphersuite) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

// The TLS versions supported by S2A's handshaker module.
type TLSVersion int32

const (
	TLSVersion_TLS1_2 TLSVersion = 0
	TLSVersion_TLS1_3 TLSVersion = 1
)

var TLSVersion_name = map[int32]string{
	0: "TLS1_2",
	1: "TLS1_3",
}

var TLSVersion_value = map[string]int32{
	"TLS1_2": 0,
	"TLS1_3": 1,
}

func (x TLSVersion) String() string {
	return proto.EnumName(TLSVersion_name, int32(x))
}

func (TLSVersion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

type Identity struct {
	// Types that are valid to be assigned to IdentityOneof:
	//	*Identity_SpiffeId
	//	*Identity_Hostname
	IdentityOneof isIdentity_IdentityOneof `protobuf_oneof:"identity_oneof"`
	// Additional identity-specific attributes.
	Attributes           map[string]string `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (m *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(m, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

type isIdentity_IdentityOneof interface {
	isIdentity_IdentityOneof()
}

type Identity_SpiffeId struct {
	SpiffeId string `protobuf:"bytes,1,opt,name=spiffe_id,json=spiffeId,proto3,oneof"`
}

type Identity_Hostname struct {
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3,oneof"`
}

func (*Identity_SpiffeId) isIdentity_IdentityOneof() {}

func (*Identity_Hostname) isIdentity_IdentityOneof() {}

func (m *Identity) GetIdentityOneof() isIdentity_IdentityOneof {
	if m != nil {
		return m.IdentityOneof
	}
	return nil
}

func (m *Identity) GetSpiffeId() string {
	if x, ok := m.GetIdentityOneof().(*Identity_SpiffeId); ok {
		return x.SpiffeId
	}
	return ""
}

func (m *Identity) GetHostname() string {
	if x, ok := m.GetIdentityOneof().(*Identity_Hostname); ok {
		return x.Hostname
	}
	return ""
}

func (m *Identity) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Identity) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Identity_SpiffeId)(nil),
		(*Identity_Hostname)(nil),
	}
}

func init() {
	proto.RegisterEnum("s2a.proto.Ciphersuite", Ciphersuite_name, Ciphersuite_value)
	proto.RegisterEnum("s2a.proto.TLSVersion", TLSVersion_name, TLSVersion_value)
	proto.RegisterType((*Identity)(nil), "s2a.proto.Identity")
	proto.RegisterMapType((map[string]string)(nil), "s2a.proto.Identity.AttributesEntry")
}

func init() {
	proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206)
}

var fileDescriptor_555bd8c177793206 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0x41, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x97, 0x0d, 0xc7, 0xf6, 0x9f, 0x68, 0x08, 0x22, 0x45, 0x26, 0x0c, 0xf5, 0x30, 0x76,
	0x28, 0x5b, 0xea, 0xc6, 0x10, 0x3c, 0xd4, 0x32, 0xec, 0x60, 0xa2, 0xb4, 0x43, 0x10, 0x0f, 0xa1,
	0x73, 0x19, 0x0b, 0xba, 0xa4, 0x34, 0xa9, 0xd0, 0x0f, 0xeb, 0x77, 0x11, 0xed, 0x52, 0xc4, 0xdb,
	0xcb, 0xef, 0xe5, 0xf1, 0xde, 0x1f, 0x0e, 0xdf, 0xd4, 0x6e, 0xa7, 0xa4, 0x9b, 0x66, 0xca, 0x28,
	0xd2, 0xd6, 0x34, 0x29, 0xe5, 0xc5, 0x17, 0x82, 0xd6, 0x7c, 0xcd, 0xa5, 0x11, 0xa6, 0x20, 0xe7,
	0xd0, 0xd6, 0xa9, 0xd8, 0x6c, 0x38, 0x13, 0x6b, 0x07, 0xf5, 0x50, 0xbf, 0x1d, 0xd6, 0xa2, 0x56,
	0x89, 0xe6, 0x6b, 0xd2, 0x85, 0xd6, 0x56, 0x69, 0x23, 0x93, 0x1d, 0x77, 0xea, 0xd6, 0xb5, 0x84,
	0x04, 0x00, 0x89, 0x31, 0x99, 0x58, 0xe5, 0x86, 0x6b, 0xa7, 0xd1, 0x6b, 0xf4, 0x3b, 0xf4, 0xd2,
	0xad, 0x9a, 0x5c, 0xdb, 0xe2, 0xfa, 0xd5, 0xaf, 0x99, 0x34, 0x59, 0x11, 0xfd, 0x89, 0x9d, 0xdd,
	0xc2, 0xf1, 0x3f, 0x9b, 0x60, 0x68, 0xbc, 0xf3, 0xa2, 0x9c, 0x13, 0xfd, 0x48, 0x72, 0x02, 0x07,
	0x9f, 0xc9, 0x47, 0xbe, 0x1f, 0x11, 0x95, 0x8f, 0x9b, 0xfa, 0x14, 0xdd, 0x61, 0x38, 0x12, 0xfb,
	0x1a, 0xa6, 0x24, 0x57, 0x9b, 0xc1, 0x2b, 0x74, 0x02, 0x91, 0x6e, 0x79, 0xa6, 0x73, 0x61, 0x38,
	0x39, 0x05, 0xe2, 0xcf, 0x62, 0x36, 0xa2, 0x53, 0x76, 0x1f, 0x3c, 0xb0, 0x38, 0xf4, 0xe9, 0x78,
	0x82, 0x6b, 0x96, 0xd3, 0xf1, 0xc4, 0x72, 0x6f, 0x7a, 0x8d, 0x11, 0xe9, 0x82, 0x13, 0x84, 0x7e,
	0x10, 0xfa, 0x74, 0xc8, 0x9e, 0x1e, 0x17, 0x2f, 0x23, 0x6f, 0x38, 0xb6, 0xa9, 0xfa, 0xe0, 0x0a,
	0x60, 0xb9, 0x88, 0x9f, 0x79, 0xa6, 0x85, 0x92, 0x04, 0xa0, 0xb9, 0x5c, 0xc4, 0x23, 0x46, 0x71,
	0xad, 0xd2, 0x1e, 0x46, 0xab, 0xe6, 0xef, 0xfd, 0xde, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc3,
	0xc4, 0xd5, 0xe1, 0x84, 0x01, 0x00, 0x00,
}
